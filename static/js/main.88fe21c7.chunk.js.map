{"version":3,"sources":["Components/Header/Header.js","Components/Country/Country.js","Components/Income/Income.js","Components/Form/Form.js","Components/Results/Results.js","util/Tax.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["Header","this","props","text","React","Component","Country","handleUserChoice","bind","e","onChange","target","value","className","type","id","name","checked","scotland","htmlFor","Income","handleUserInput","Number","min","income","required","Form","handleScotlandChange","handleIncomeChange","handleSubmit","status","onScotlandChange","onIncomeChange","onFormSubmit","preventDefault","style","display","formSubmitted","onSubmit","Results","handleClick","onReset","toLocaleString","currency","maximumFractionDigits","incomeTax","taxBreakdown","personalAllowanceAmount","personalAllowanceTax","basicAmount","basicTax","higherAmount","higherTax","additionalAmount","additionalTax","totalIncome","totalTax","scotPersonalAllowanceAmount","scotPersonalAllowanceTax","scotStarterAmount","scotStarterTax","scotBasicAmount","scotBasicTax","scotIntermediateAmount","scotIntermediateTax","scotHigherAmount","scotHigherTax","scotTopAmount","scotTopTax","scotTotalIncome","scotTotalTax","onClick","Tax","calculateTax","upperScotPA","upperScotBasic","Math","floor","upperScotIntermediate","upperScotHigher","upperPA","upperHigher","App","state","updateScotland","updateIncome","submitForm","resetApp","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.88fe21c7.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header>\n                <h1>{this.props.text}</h1>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './Country.css';\n\nclass Country extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUserChoice = this.handleUserChoice.bind(this);\n    }\n\n    handleUserChoice(e) {\n        this.props.onChange(e.target.value);\n    }\n    \n    render() {\n        return (\n            <div className=\"country-field\">\n                <h3>You are a resident of...</h3>\n                <div className=\"radio\">\n                    <span>\n                        <input type=\"radio\" id=\"no\" name=\"no\" onChange={this.handleUserChoice} value=\"no\" checked={this.props.scotland === false} />\n                        <label htmlFor=\"no\">ENG, WAL or NI</label>\n                    </span>\n                    <span>\n                        <input type=\"radio\" id=\"yes\" name=\"yes\" onChange={this.handleUserChoice} value=\"yes\" checked={this.props.scotland === true} />\n                        <label htmlFor=\"yes\">SCO</label>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Country;","import React from 'react';\nimport './Income.css';\n\nclass Income extends React.Component {\n   constructor(props) {\n       super(props);\n       this.handleUserInput = this.handleUserInput.bind(this);\n   }\n\n   handleUserInput(e) {\n       this.props.onChange(Number(e.target.value));\n   }\n    \n    render() {\n        return (\n            <div className=\"income-field\">\n                <h3>Your annual income (£) is...</h3>\n                <input type=\"number\" id=\"income\" className=\"input\" name=\"income\" min=\"0\" value={this.props.income} onChange={this.handleUserInput} required></input>\n            </div>\n        )\n    }\n}\n\nexport default Income;","import React from 'react';\nimport './Form.css';\nimport ContentBox from '../ContentBox/ContentBox'\nimport Country from '../Country/Country';\nimport Income from '../Income/Income';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleScotlandChange = this.handleScotlandChange.bind(this);\n        this.handleIncomeChange = this.handleIncomeChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleScotlandChange(status) {\n        this.props.onScotlandChange(status);\n    }\n\n    handleIncomeChange(income) {\n        this.props.onIncomeChange(income);\n    }\n\n    handleSubmit(e) {\n        this.props.onFormSubmit(true);\n        e.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"content-box\" style={{ display: this.props.formSubmitted ? 'none' : 'flex' }}>\n                <form onSubmit={this.handleSubmit}>\n                    <Country scotland={this.props.scotland} onChange={this.handleScotlandChange} />\n                    <Income income={this.props.income} onChange={this.handleIncomeChange} />\n                    <input type=\"submit\" value=\"Submit\" className=\"submit\"></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React from 'react';\nimport './Results.css';\n\nclass Results extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.onReset();\n    }\n\n    render() {\n        return (\n            <div className=\"results\" style={{ display: this.props.formSubmitted ? 'block' : 'none' }}>\n                <div className=\"content-box key-results\">\n                    <div className=\"key-result\">\n                        <div className=\"label\">Your salary</div>\n                        <div className=\"key-data\">{this.props.income.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</div>\n                    </div>\n                    <div  className=\"key-result\">\n                        <div className=\"label\">Your icome tax</div>\n                        <div className=\"key-data\">{this.props.incomeTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</div>\n                    </div>\n                </div>\n                <div className=\"content-box full-results\">\n                    <h3>Breakdown by tax band</h3>\n                    <div style={{ display: this.props.scotland ? 'none' : 'block' }} className=\"breakdown\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Band</th>\n                                    <th>Income</th>\n                                    <th>Tax</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Personal allowance</td>\n                                    <td>{this.props.taxBreakdown.personalAllowanceAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.personalAllowanceTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Basic rate</td>\n                                    <td>{this.props.taxBreakdown.basicAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.basicTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Higher rate</td>\n                                    <td>{this.props.taxBreakdown.higherAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.higherTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Additional rate</td>\n                                    <td>{this.props.taxBreakdown.additionalAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.additionalTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"total\">Total</td>\n                                    <td className=\"total\">{this.props.taxBreakdown.totalIncome.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td className=\"total\">{this.props.taxBreakdown.totalTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div style={{ display: this.props.scotland ? 'block' : 'none' }} className=\"breakdown\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Band</th>\n                                    <th>Income</th>\n                                    <th>Tax</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>Personal allowance</td>\n                                    <td>{this.props.taxBreakdown.scotPersonalAllowanceAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.scotPersonalAllowanceTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Starter rate</td>\n                                    <td>{this.props.taxBreakdown.scotStarterAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.scotStarterTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Basic rate</td>\n                                    <td>{this.props.taxBreakdown.scotBasicAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.scotBasicTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Intermediate rate</td>\n                                    <td>{this.props.taxBreakdown.scotIntermediateAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.scotIntermediateTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Higher rate</td>\n                                    <td>{this.props.taxBreakdown.scotHigherAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.scotHigherTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td>Top rate</td>\n                                    <td>{this.props.taxBreakdown.scotTopAmount.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td>{this.props.taxBreakdown.scotTopTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"total\">Total</td>\n                                    <td className=\"total\">{this.props.taxBreakdown.scotTotalIncome.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                    <td className=\"total\">{this.props.taxBreakdown.scotTotalTax.toLocaleString('en-GB', {style: 'currency', currency: 'GBP', maximumFractionDigits: 2})}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"separator\"></div>\n                    <button onClick={this.handleClick}>Start again</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Results;","const Tax = {\n    calculateTax (scotland, income) {\n\n        // Not Scotland\n        if (scotland === false) {\n\n            // Upper bounds of each tax band >> Additional rate has no upper bound.\n            let upperPA = 12500;\n            let upperBasic = 50000;\n            let upperHigher = 150000;\n\n            // Percentage rates of each tax band >> Personal allowance is not taxed.\n            let basicRate = 20;\n            let higherRate = 40;\n            let additionalRate = 45;\n\n            // Income breakdown variables\n            let basicAmount;\n            let higherAmount;\n            let additionalAmount;\n\n            // Tax breakdown variables\n            let personalAllowanceTax;\n            let basicTax;\n            let higherTax;\n            let additionalTax;\n            let totalTax;\n            \n            // Personal allowance\n            if (income <= upperPA) {\n                return {\n                    personalAllowanceAmount: income,\n                    personalAllowanceTax: 0,\n                    basicAmount: 0,\n                    basicTax: 0,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: income,\n                    totalTax: 0,\n                    scotPersonalAllowanceAmount: 0,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: 0,\n                    scotStarterTax: 0,\n                    scotBasicAmount: 0,\n                    scotBasicTax: 0,\n                    scotIntermediateAmount: 0,\n                    scotIntermediateTax: 0,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: 0,\n                    scotTotalTax: 0\n                }\n\n            // Basic rate\n            } else if (income <= upperBasic && income > upperPA) {\n                basicAmount = income - upperPA;\n                basicTax = (basicAmount * basicRate) / 100;\n                return {\n                    personalAllowanceAmount: upperPA,\n                    personalAllowanceTax: 0,\n                    basicAmount: basicAmount,\n                    basicTax: basicTax,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: income,\n                    totalTax: basicTax,\n                    scotPersonalAllowanceAmount: 0,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: 0,\n                    scotStarterTax: 0,\n                    scotBasicAmount: 0,\n                    scotBasicTax: 0,\n                    scotIntermediateAmount: 0,\n                    scotIntermediateTax: 0,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: 0,\n                    scotTotalTax: 0\n                }\n\n            // Higher rate\n            } else if (income <= upperHigher && income > upperBasic) {\n                let reducer;\n                if (income < 125000 && income > 100000) {\n                    reducer = Math.floor((income - 100000)/2);\n                    upperPA -= reducer;\n                } else if (income > 125000) {\n                    upperPA = 0;\n                }\n                personalAllowanceTax = 0;\n                basicAmount = upperBasic - upperPA;\n                basicTax = (basicAmount * basicRate) / 100;\n                higherAmount = income - upperBasic;\n                higherTax = (higherAmount * higherRate) / 100;\n                totalTax = personalAllowanceTax + basicTax + higherTax;\n                return {\n                    personalAllowanceAmount: upperPA,\n                    personalAllowanceTax: personalAllowanceTax,\n                    basicAmount: basicAmount,\n                    basicTax: basicTax,\n                    higherAmount: higherAmount,\n                    higherTax: higherTax,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: income,\n                    totalTax: totalTax,\n                    scotPersonalAllowanceAmount: 0,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: 0,\n                    scotStarterTax: 0,\n                    scotBasicAmount: 0,\n                    scotBasicTax: 0,\n                    scotIntermediateAmount: 0,\n                    scotIntermediateTax: 0,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: 0,\n                    scotTotalTax: 0\n                }\n\n            // Additional rate\n            } else if (income > upperHigher) {\n                upperPA = 0;\n                personalAllowanceTax = 0;\n                basicAmount = upperBasic - upperPA;\n                basicTax = (basicAmount * basicRate) / 100;\n                higherAmount = upperHigher - upperBasic;\n                higherTax = (higherAmount * higherRate) / 100;\n                additionalAmount = income - upperHigher;\n                additionalTax = (additionalAmount * additionalRate) / 100;\n                totalTax = personalAllowanceTax + basicTax + higherTax + additionalTax;\n                return {\n                    personalAllowanceAmount: upperPA,\n                    personalAllowanceTax: personalAllowanceTax,\n                    basicAmount: basicAmount,\n                    basicTax: basicTax,\n                    higherAmount: higherAmount,\n                    higherTax: higherTax,\n                    additionalAmount: additionalAmount,\n                    additionalTax: additionalTax,\n                    totalIncome: income,\n                    totalTax: totalTax,\n                    scotPersonalAllowanceAmount: 0,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: 0,\n                    scotStarterTax: 0,\n                    scotBasicAmount: 0,\n                    scotBasicTax: 0,\n                    scotIntermediateAmount: 0,\n                    scotIntermediateTax: 0,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: 0,\n                    scotTotalTax: 0\n                }\n            }\n\n        // Scotland\n        } else if (scotland === true) {\n\n            // Upper bounds of Scottish bands\n            let upperScotPA = 12500;\n            let upperScotStarter = 14585;\n            let upperScotBasic = 25158;\n            let upperScotIntermediate = 43430;\n            let upperScotHigher = 150000;\n\n            // Percentage rates of Scottish bands\n            let scotStarterRate = 19;\n            let scotBasicRate = 20;\n            let scotIntermediateRate = 21;\n            let scotHigherRate = 41;\n            let scotTopRate = 46;\n\n            // Scotland income breakdown variables\n            let scotStarterAmount;\n            let scotBasicAmount;\n            let scotIntermediateAmount;\n            let scotHigherAmount;\n            let scotTopAmount;\n\n            // Scotland tax breakdown variables\n            let scotPersonalAllowanceTax;\n            let scotStarterTax;\n            let scotBasicTax;\n            let scotIntermediateTax;\n            let scotHigherTax;\n            let scotTopTax;\n            let scotTotalTax;\n\n            // Personal allowance\n            if (income <= upperScotPA) {\n                return {\n                    personalAllowanceAmount: 0,\n                    personalAllowanceTax: 0,\n                    basicAmount: 0,\n                    basicTax: 0,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: 0,\n                    totalTax: 0,\n                    scotPersonalAllowanceAmount: income,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: 0,\n                    scotStarterTax: 0,\n                    scotBasicAmount: 0,\n                    scotBasicTax: 0,\n                    scotIntermediateAmount: 0,\n                    scotIntermediateTax: 0,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: income,\n                    scotTotalTax: 0\n                }\n\n            // Starter rate\n            } else if (income <= upperScotStarter && income > upperScotPA) {\n                scotStarterAmount = income - upperScotPA;\n                scotStarterTax = (scotStarterAmount * scotStarterRate) / 100;\n                scotTotalTax = scotStarterTax;\n                return {\n                    personalAllowanceAmount: 0,\n                    personalAllowanceTax: 0,\n                    basicAmount: 0,\n                    basicTax: 0,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: 0,\n                    totalTax: 0,\n                    scotPersonalAllowanceAmount: upperScotPA,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: scotStarterAmount,\n                    scotStarterTax: scotStarterTax,\n                    scotBasicAmount: 0,\n                    scotBasicTax: 0,\n                    scotIntermediateAmount: 0,\n                    scotIntermediateTax: 0,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: income,\n                    scotTotalTax: scotTotalTax\n                }\n\n            // Basic rate\n            } else if (income <= upperScotBasic && income > upperScotStarter) {\n                scotStarterAmount = upperScotStarter - upperScotPA;\n                scotStarterTax = (scotStarterAmount * scotStarterRate) / 100;\n                scotBasicAmount = income - upperScotStarter;\n                scotBasicTax = (scotBasicAmount * scotBasicRate) / 100;\n                scotTotalTax = scotStarterTax + scotBasicTax;\n                return {\n                    personalAllowanceAmount: 0,\n                    personalAllowanceTax: 0,\n                    basicAmount: 0,\n                    basicTax: 0,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: 0,\n                    totalTax: 0,\n                    scotPersonalAllowanceAmount: upperScotPA,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: scotStarterAmount,\n                    scotStarterTax: scotStarterTax,\n                    scotBasicAmount: scotBasicAmount,\n                    scotBasicTax: scotBasicTax,\n                    scotIntermediateAmount: 0,\n                    scotIntermediateTax: 0,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: income,\n                    scotTotalTax: scotTotalTax\n                }\n\n            // Intermediate rate\n            } else if (income <= upperScotIntermediate && income > upperScotBasic) {\n                scotStarterAmount = upperScotStarter - upperScotPA;\n                scotStarterTax = (scotStarterAmount * scotStarterRate) / 100;\n                scotBasicAmount = upperScotBasic - upperScotStarter;\n                scotBasicTax = (scotBasicAmount * scotBasicRate) / 100;\n                scotIntermediateAmount = income - upperScotBasic;\n                scotIntermediateTax = (scotIntermediateAmount * scotIntermediateRate) / 100;\n                scotTotalTax = scotStarterTax + scotBasicTax + scotIntermediateTax;\n                return {\n                    personalAllowanceAmount: 0,\n                    personalAllowanceTax: 0,\n                    basicAmount: 0,\n                    basicTax: 0,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: 0,\n                    totalTax: 0,\n                    scotPersonalAllowanceAmount: upperScotPA,\n                    scotPersonalAllowanceTax: 0,\n                    scotStarterAmount: scotStarterAmount,\n                    scotStarterTax: scotStarterTax,\n                    scotBasicAmount: scotBasicAmount,\n                    scotBasicTax: scotBasicTax,\n                    scotIntermediateAmount: scotIntermediateAmount,\n                    scotIntermediateTax: scotIntermediateTax,\n                    scotHigherAmount: 0,\n                    scotHigherTax: 0,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: income,\n                    scotTotalTax: scotTotalTax\n                }\n\n            // Higher rate\n            } else if (income <= upperScotHigher && income > upperScotIntermediate) {\n                let reducer;\n                if (income < 125000 && income > 100000) {\n                    reducer = Math.floor((income - 100000)/2);\n                    upperScotPA -= reducer;\n                } else if (income > 125000) {\n                    upperScotPA = 0;\n                }\n                scotPersonalAllowanceTax = 0;\n                scotStarterAmount = upperScotStarter - upperScotPA;\n                scotStarterTax = (scotStarterAmount * scotStarterRate) / 100;\n                scotBasicAmount = upperScotBasic - upperScotStarter;\n                scotBasicTax = (scotBasicAmount * scotBasicRate) / 100;\n                scotIntermediateAmount = upperScotIntermediate - upperScotBasic;\n                scotIntermediateTax = (scotIntermediateAmount * scotIntermediateRate) / 100;\n                scotHigherAmount = income - upperScotIntermediate;\n                scotHigherTax = (scotHigherAmount * scotHigherRate) / 100;\n                scotTotalTax = scotPersonalAllowanceTax + scotStarterTax + scotBasicTax + scotIntermediateTax + scotHigherTax;\n                return {\n                    personalAllowanceAmount: 0,\n                    personalAllowanceTax: 0,\n                    basicAmount: 0,\n                    basicTax: 0,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: 0,\n                    totalTax: 0,\n                    scotPersonalAllowanceAmount: upperScotPA,\n                    scotPersonalAllowanceTax: scotPersonalAllowanceTax,\n                    scotStarterAmount: scotStarterAmount,\n                    scotStarterTax: scotStarterTax,\n                    scotBasicAmount: scotBasicAmount,\n                    scotBasicTax: scotBasicTax,\n                    scotIntermediateAmount: scotIntermediateAmount,\n                    scotIntermediateTax: scotIntermediateTax,\n                    scotHigherAmount: scotHigherAmount,\n                    scotHigherTax: scotHigherTax,\n                    scotTopAmount: 0,\n                    scotTopTax: 0,\n                    scotTotalIncome: income,\n                    scotTotalTax: scotTotalTax\n                }\n\n            // Top rate\n            } else if (income > upperScotHigher) {\n                upperScotPA = 0;\n                scotPersonalAllowanceTax = 0;\n                scotStarterAmount = upperScotStarter - upperScotPA;\n                scotStarterTax = (scotStarterAmount * scotStarterRate) / 100;\n                scotBasicAmount = upperScotBasic - upperScotStarter;\n                scotBasicTax = (scotBasicAmount * scotBasicRate) / 100;\n                scotIntermediateAmount = upperScotIntermediate - upperScotBasic;\n                scotIntermediateTax = (scotIntermediateAmount * scotIntermediateRate) / 100;\n                scotHigherAmount = upperScotHigher - upperScotIntermediate;\n                scotHigherTax = (scotHigherAmount * scotHigherRate) / 100;\n                scotTopAmount = income - upperScotHigher;\n                scotTopTax = (scotTopAmount * scotTopRate) / 100;\n                scotTotalTax = scotPersonalAllowanceTax + scotStarterTax + scotBasicTax + scotIntermediateTax + scotHigherTax + scotTopTax;\n                return {\n                    personalAllowanceAmount: 0,\n                    personalAllowanceTax: 0,\n                    basicAmount: 0,\n                    basicTax: 0,\n                    higherAmount: 0,\n                    higherTax: 0,\n                    additionalAmount: 0,\n                    additionalTax: 0,\n                    totalIncome: 0,\n                    totalTax: 0,\n                    scotPersonalAllowanceAmount: upperScotPA,\n                    scotPersonalAllowanceTax: scotPersonalAllowanceTax,\n                    scotStarterAmount: scotStarterAmount,\n                    scotStarterTax: scotStarterTax,\n                    scotBasicAmount: scotBasicAmount,\n                    scotBasicTax: scotBasicTax,\n                    scotIntermediateAmount: scotIntermediateAmount,\n                    scotIntermediateTax: scotIntermediateTax,\n                    scotHigherAmount: scotHigherAmount,\n                    scotHigherTax: scotHigherTax,\n                    scotTopAmount: scotTopAmount,\n                    scotTopTax: scotTopTax,\n                    scotTotalIncome: income,\n                    scotTotalTax: scotTotalTax\n                }\n            } else {\n                return 'Invalid input';\n            }\n        } else {\n            return 'Invalid input';\n        }\n    }\n}\n\nexport default Tax;","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Form from '../Form/Form';\nimport Results from '../Results/Results';\nimport Tax from '../../util/Tax';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formSubmitted: false,\n      scotland: false,\n      income: '',\n      incomeTax: 0,\n      taxBreakdown: {\n        personalAllowanceAmount: 0,\n        personalAllowanceTax: 0,\n        basicAmount: 0,\n        basicTax: 0,\n        higherAmount: 0,\n        higherTax: 0,\n        additionalAmount: 0,\n        additionalTax: 0,\n        totalIncome: 0,\n        totalTax: 0,\n        scotPersonalAllowanceAmount: 0,\n        scotPersonalAllowanceTax: 0,\n        scotStarterAmount: 0,\n        scotStarterTax: 0,\n        scotBasicAmount: 0,\n        scotBasicTax: 0,\n        scotIntermediateAmount: 0,\n        scotIntermediateTax: 0,\n        scotHigherAmount: 0,\n        scotHigherTax: 0,\n        scotTopAmount: 0,\n        scotTopTax: 0,\n        scotTotalIncome: 0,\n        scotTotalTax: 0\n      }\n    }\n\n    this.updateScotland = this.updateScotland.bind(this);\n    this.updateIncome = this.updateIncome.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.resetApp = this.resetApp.bind(this);\n  }\n\n  updateScotland(status) {\n    if (status === 'yes') {\n      this.setState({\n        scotland: true\n    })\n    } else {\n      this.setState({\n        scotland: false\n      })\n    }\n  }\n\n  updateIncome(income) {\n    this.setState({\n        income: income\n    })\n  }\n\n  submitForm() {\n    let incomeTax = Tax.calculateTax(this.state.scotland, this.state.income);\n    if (this.state.scotland === false) {\n      this.setState({\n        formSubmitted: true,\n        incomeTax: incomeTax.totalTax,\n        taxBreakdown: incomeTax\n      })\n    } else if (this.state.scotland === true) {\n      this.setState({\n        formSubmitted: true,\n        incomeTax: incomeTax.scotTotalTax,\n        taxBreakdown: incomeTax\n      })\n    } else {\n      this.setState({\n        formSubmitted: true\n      })\n    }\n  }\n\n  resetApp() {\n    this.setState({\n      formSubmitted: false,\n      scotland: false,\n      income: '',\n      incomeTax: 0,\n      taxBreakdown: {\n        personalAllowanceAmount: 0,\n        personalAllowanceTax: 0,\n        basicAmount: 0,\n        basicTax: 0,\n        higherAmount: 0,\n        higherTax: 0,\n        additionalAmount: 0,\n        additionalTax: 0,\n        totalIncome: 0,\n        totalTax: 0,\n        scotPersonalAllowanceAmount: 0,\n        scotPersonalAllowanceTax: 0,\n        scotStarterAmount: 0,\n        scotStarterTax: 0,\n        scotBasicAmount: 0,\n        scotBasicTax: 0,\n        scotIntermediateAmount: 0,\n        scotIntermediateTax: 0,\n        scotHigherAmount: 0,\n        scotHigherTax: 0,\n        scotTopAmount: 0,\n        scotTopTax: 0,\n        scotTotalIncome: 0,\n        scotTotalTax: 0\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header text={this.state.formSubmitted ? \"Your UK income tax contribution\" : \"Calculate your UK income tax\"} />\n        <div className=\"content-container\">\n          <Form scotland={this.state.scotland} onScotlandChange={this.updateScotland} income={this.state.income} onIncomeChange={this.updateIncome} formSubmitted={this.state.formSubmitted} onFormSubmit={this.submitForm} />\n          <Results formSubmitted={this.state.formSubmitted} income={this.state.income} incomeTax={this.state.incomeTax} taxBreakdown={this.state.taxBreakdown} scotland={this.state.scotland} onReset={this.resetApp} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}